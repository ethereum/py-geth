version: 2.1

parameters:
  go_version:
    default: "1.22.4"
    type: string

supported_python_minor_versions: &supported_python_minor_versions
  - "8"
  - "9"
  - "10"
  - "11"
  - "12"
  - "13"

common_go_steps: &common_go_steps
  working_directory: ~/repo
  steps:
    - checkout
    - run:
        name: checkout fixtures submodule
        command: git submodule update --init --recursive
    - run:
        name: merge pull request base
        command: ./.circleci/merge_pr.sh
    - run:
        name: merge pull request base (2nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - run:
        name: merge pull request base (3rd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - restore_cache:
        keys:
          - cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install dependencies
        command: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - run:
        name: install golang-<< pipeline.parameters.go_version >>
        command: ./.circleci/install_golang.sh << pipeline.parameters.go_version >>
    - run:
        name: run tox
        command: python -m tox run -r
    - save_cache:
        paths:
          - .hypothesis
          - .tox
          - ~/.cache/pip
          - ~/.local
        key: cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

orbs:
  win: circleci/windows@5.0.0

jobs:
  common:
    parameters:
      python_minor_version:
        type: string
      tox_env:
        type: string
    <<: *common_go_steps
    docker:
        - image: cimg/python:3.<< parameters.python_minor_version >>
    environment:
      TOXENV: py3<< parameters.python_minor_version >>-<< parameters.tox_env >>

  install-geth:
    parameters:
      python_minor_version:
        type: string
      geth_version:
        type: string
    <<: *common_go_steps
    docker:
      - image: cimg/python:3.<< parameters.python_minor_version >>
    environment:
      GETH_VERSION: v<< parameters.geth_version >>
      TOXENV: py3<< parameters.python_minor_version >>-install-geth-v<< parameters.geth_version >>

  windows-wheel:
    parameters:
      python_minor_version:
        type: string
    executor:
      name: win/default
      shell: bash.exe
    working_directory: C:\Users\circleci\project\py-geth
    environment:
      TOXENV: windows-wheel
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
      - run:
          name: install pyenv
          command: |
            pip install pyenv-win --target $HOME/.pyenv
            echo 'export PYENV="$HOME/.pyenv/pyenv-win/"' >> $BASH_ENV
            echo 'export PYENV_ROOT="$HOME/.pyenv/pyenv-win/"' >> $BASH_ENV
            echo 'export PYENV_USERPROFILE="$HOME/.pyenv/pyenv-win/"' >> $BASH_ENV
            echo 'export PATH="$PATH:$HOME/.pyenv/pyenv-win/bin"' >> $BASH_ENV
            echo 'export PATH="$PATH:$HOME/.pyenv/pyenv-win/shims"' >> $BASH_ENV
            source $BASH_ENV
            pyenv update
      - run:
          name: install latest python version and tox
          command: |
            LATEST_VERSION=$(pyenv install --list | grep -E "^\s*3\.<< parameters.python_minor_version >>\.[0-9]+$" | tail -1 | tr -d ' ')
            echo "Installing python version $LATEST_VERSION"
            pyenv install $LATEST_VERSION
            pyenv global $LATEST_VERSION
            python3 -m pip install --upgrade pip
            python3 -m pip install tox
      - run:
          name: run tox
          command: |
            echo 'running tox with' $(python3 --version)
            python3 -m tox run -r
      - save_cache:
          paths:
            - .tox
          key: cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

workflows:
  version: 2
  test:
    jobs: &all_jobs
      - common:
          matrix:
            parameters:
              python_minor_version: *supported_python_minor_versions
              tox_env: ["lint", "wheel"]
          name: "py3<< matrix.python_minor_version >>-<< matrix.tox_env >>"
      - install-geth:
          matrix:
            parameters:
              python_minor_version: *supported_python_minor_versions
              geth_version: [
                "1_15_0", "1_15_1", "1_15_2", "1_15_3", "1_15_4", "1_15_5",
                "1_15_6", "1_15_7", "1_15_8", "1_15_9", "1_15_10", "1_15_11",
                "1_16_0", "1_16_1", "1_16_2", "1_16_3"
              ]
          name: "py3<< matrix.python_minor_version >>-install-geth-v<< matrix.geth_version >>"
      - windows-wheel:
          matrix:
            parameters:
              python_minor_version: [ "11", "12", "13" ]
          name: "py3<< matrix.python_minor_version >>-windows-wheel"

  nightly:
    triggers:
      - schedule:
          # Weekdays 12:00p UTC
          cron: "0 12 * * 1,2,3,4,5"
          filters:
            branches:
              only:
                - main
    jobs: *all_jobs
